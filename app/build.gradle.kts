/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
    
    // Kotlinx serialization plugin
    kotlin("plugin.serialization") version "2.2.20"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Kotter for terminal UI
    implementation("com.varabyte.kotter:kotter:1.1.2")
    
    // JGit for Git operations
    implementation("org.eclipse.jgit:org.eclipse.jgit:6.10.1.202505221210-r")
    
    // Kotlinx serialization for config management
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3")
    
    // YAML parsing
    implementation("com.charleskorn.kaml:kaml:0.61.0")
    
    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use Kotlin Test test framework
            useKotlinTest("2.1.0")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.RunnerKt"
}
